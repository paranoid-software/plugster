export default class Plugster{constructor(outlets){this.name=this.constructor.name,console.log(this.name+" Controller Instantiated."),this._=outlets,this.childTemplates={},this.init(),Plugster.registry||(Plugster.registry={}),Plugster.registry[this.name.toLowerCase()]=this,Plugster.explicitSubscriptions||(Plugster.explicitSubscriptions={}),Plugster.htmlDeclaredSubscriptions||(Plugster.htmlDeclaredSubscriptions={})}toString(){return this.name}init(){let self=this;console.log(`Initializing ${self.name} Controller.`),self.bindOutlets((function(){console.log(self.name+" Controller Initialized"),self.afterInit()}))}afterInit(){throw new Error("You have to implement the Plugster afterInit method !!!")}bindOutlets(afterBind){let self=this;console.log(`Binding Outlets for ${self.name} Controller.`);let childTemplatesLoadPromises=[],controllerSelectorSentence=`[data-controller-name=${self.name}]`;if(0===$(controllerSelectorSentence).length)throw new Error(`There is no view with a ${self.name} controller !!!`);let root=$(controllerSelectorSentence);$.map(self._,(function(outlet,key){let selector=`[data-outlet-id='${key}']`;if(0===root.find(selector).length)throw new Error(`Outlet ${key} does not exist, check both ${self.name} view and controller !!!`);let filteredOutlet=root.find(selector);if(filteredOutlet.length>1){filteredOutlet=$.map(filteredOutlet,(function(o){return $(o).closest("[data-controller-name]").data("controller-name")===self.name?$(o):null}))[0]}if(filteredOutlet.data("child-templates")){filteredOutlet.buildListItem=function(withTemplateIndex,itemKey,jsonData,outletsSchema){this.items||(this.items={}),this.items[itemKey]||(this.items[itemKey]={}),this.append(self.childTemplates[`${key}_${withTemplateIndex}`]);let outlets=self.compileChildTemplate(this.children().last(),outletsSchema);return null===outlets?null:(outlets.root.attr("data-key",itemKey),this.items[itemKey].outlets=outlets,this.items[itemKey].data=jsonData,this.items[itemKey].outlets)},filteredOutlet.count=function(){return Object.keys(this.items).length},filteredOutlet.getData=function(key){return this.items[key].data},filteredOutlet.getOutlets=function(key){return this.items[key].outlets},filteredOutlet.clear=function(){this.items=void 0,this.children().remove()};let templates=filteredOutlet.data("child-templates");$.map(templates,(function(childTemplate,index){let deferred=$.Deferred();childTemplatesLoadPromises.push(deferred.promise()),self.loadChildTemplate(key,index,childTemplate,deferred)}))}self._[key]=filteredOutlet})),self._.root=root,Object.keys(root.data()).map((function(key){let parts=key.replace(/[A-Z]/g,(m=>"-"+m.toLowerCase())).split("-");if(3!==parts.length)return null;if("on"!==parts[0])return null;let methodName=root.data(key);if(!self[methodName])throw new Error(`There is no method ${methodName} within the ${self.name} controller !!!`);let plugsterNameLowerCased=parts[1],eventNameLowerCased=parts[2];if(!Plugster.registry[plugsterNameLowerCased])throw new Error(`There is no ${plugsterNameLowerCased} controller !!!`);if(Object.getOwnPropertyNames(Object.getPrototypeOf(Plugster.registry[plugsterNameLowerCased])).map((methodName=>methodName.toLowerCase())).indexOf(eventNameLowerCased)<0)throw new Error(`There is no ${eventNameLowerCased} event in ${plugsterNameLowerCased} controller !!!`);Plugster.htmlDeclaredSubscriptions[`${plugsterNameLowerCased}_${eventNameLowerCased}_${self.name.toLowerCase()}`]={listener:self,methodName:methodName}})),console.log(`Outlets for ${self.name} Controller were binded successfuly !!!`),window.Promise.all(childTemplatesLoadPromises).then((function(){afterBind()}))}loadChildTemplate(outletName,index,file,deferred){let self=this;$.get({url:file,cache:!1},(function(html){self.childTemplates[`${outletName}_${index}`]=html,console.log(`Template ${file} loaded.`),deferred.resolve()}))}compileChildTemplate(template,outletsSchema){if(!outletsSchema||0===Object.keys(outletsSchema).length)return null;let outlets={};return outlets.root=template,$.map(template.find("[data-child-outlet-id]"),(function(outlet){outlets[$(outlet).data("child-outlet-id")]=$(outlet)})),outlets}registerEventSignature(name,data,callback){$(this).on(name,data,callback)}dispatchEvent(name,args){this.broadcastExplicitSubscriptionsMessages(name,args),this.broadcastHtmlDeclaredSubscriptionsMessages(name,args),$(this).trigger(new $.Event(name,{args:args}))}broadcastExplicitSubscriptionsMessages(name,args){let simpleKey=this.name.toLowerCase(),compoundKey=`${this.name}_${name}`.toLowerCase();Plugster.explicitSubscriptions[simpleKey]?.onNewMessage(this.name,name,args),Plugster.explicitSubscriptions[compoundKey]?.onNewMessage(this.name,name,args)}broadcastHtmlDeclaredSubscriptionsMessages(name,args){let keyPrefix=`${this.name}_${name}`.toLowerCase();Object.keys(Plugster.htmlDeclaredSubscriptions).map((function(key){if(key.startsWith(keyPrefix)){let sub=Plugster.htmlDeclaredSubscriptions[key];sub.listener[sub.methodName].call(sub.listener,args)}}))}listenTo(pubPlugster,event){event?Plugster.explicitSubscriptions[`${pubPlugster.name}_${event.name}`.toLowerCase()]=this:Plugster.explicitSubscriptions[pubPlugster.name.toLowerCase()]=this}}